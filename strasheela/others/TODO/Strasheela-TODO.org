#+CATEGORY: Strasheela

* Strasheela release


** ?? Possibly set up wiki

   Problem: I would need memory!! 

   Could I instead install a wiki on ICCMR server? There is > 15 GB available... 

   Advantage: I can easily backup, have access to hardware 

*** Required features

    OK in sourceforge - Sound files upload
    OK in sourceforge - Backup possible

*** other important features 

    - Easy registration for editors

*** Installation

**** Mediawiki
     
     http://www.mediawiki.org/wiki/Installation
     http://www.mediawiki.org/wiki/Manual:Installation_guide

     Check out turn-key solutions
     http://www.mediawiki.org/wiki/TurnKey_MediaWiki
     http://www.rpath.org/rbuilder/project/mediawiki

***** Mediawiki Extensions

      http://www.mediawiki.org/wiki/Extension:Matrix

***** Add syntax colouring for Oz

      http://www.mediawiki.org/wiki/Extension:ASHighlight
      http://www.andre-simon.de/dokuwiki/doku.php?id=en:langdef
      http://www.andre-simon.de/dokuwiki/doku.php?id=en:regex


***** Lilypond support: http://www.mediawiki.org/wiki/Extension:LilyPond


***** MP3 
      http://www.mediawiki.org/wiki/Extension:FlashMP3


** Document more examples 

   Move existing example doc to wiki
   Add more example docs..


** Test Windows installation script and complete it

   [[file:~/oz/music/Strasheela/strasheela/trunk/strasheela/scripts/install.bat]]


** Repair adaptive JI

   see [[file:~/oz/music/Strasheela/strasheela/trunk/strasheela/contributions/anders/HarmonisedScore/testing/Score-test.oz::GetAdaptiveJIPitch]]


** Lilypond: output seq (of seq ...) of sims with multiple staffs 


* Strasheela examples


** Realtime example with non-harmonic tones etc. for Eduardo

*** Do expresssive performance (timing and velocity)

*** DONE Add more motifs						:URGENT:
    CLOSED: [2009-04-11 Sat 14:06]

** Revised Realtime example for Eduardo

*** Create default solutions (in case of fail etc)
*** DONE See other TODOs in text
    CLOSED: [2009-01-19 Mon 18:54]
*** DONE Remove commented code
    CLOSED: [2009-01-19 Mon 18:54]
*** DONE Maxpatch: use or copy comments from other Max patch..
    CLOSED: [2009-01-19 Mon 18:54]

*** DONE ?? add Motifs (?? distinguish cases by triplets vs [duolen])
    CLOSED: [2009-01-19 Mon 18:54]
    
*** ?? Do expresssive performance (timing and velocity)


* Strasheela Bugs

** TODO BUG: getOffsetTimeInSeconds  no dependency to tempo curve or time shift function defined yet, depends on type of temporal container

** TODO BUG: tempo setting affects Csound and MIDI output differently

%% BUG: MIDI tempo not OK

declare
%% set playback tempo
{Init.setTempo 70.0}
%% Create test score
MyTestScore = {Score.makeScore
	       seq(items:[note(duration:2
			       pitch:60
			       amplitude:80)
			  note(duration:2
			       pitch:64
			       amplitude:60)
			  note(duration:2
			       pitch:67
			       amplitude:50)
			  note(duration:6
			       pitch:72
			       amplitude:100)
			 ]
		   startTime:0
		   timeUnit:beats(4))
	       unit}


%% Just in case: wait until 
{MyTestScore wait}


%% Csound output 
{Out.renderAndPlayCsound MyTestScore
 unit(file:myTestScore)}

%% MIDI output
{Out.midi.renderAndPlayMidiFile MyTestScore
 unit(file:myTestScore)}


* Strasheela design						    :STRASHEELA:

** TODO Fenv.renderAndPlayMidi: add Fenv controlling articulation (note length)
   
   ?? Fenv value is note duration factor 
   E.g., 0.8 results in some non-legato, 1.1 is legato, 0.3 is staccato
   
   Or is addition better than multiplication
   I feel multiplication is more flexible, but sometimes I may want to add instead
   ?? can I somehow generise and allow for both options?

** TODO Archive Fenvs by approximation (sampling the Fenv)

   I may use linear Fenvs or something similar. May result in long code files (if approximation/sampling has high rate), but this is at least some easy and working solution
   
** TODO Create variant for Out.saveScore using pickles

   Some score objects (e.g., Fenvs which contain procs) cannot be translated into text (code), i.e. cannot be "archived". However, they could be picked! 

   On the other hand, pickling not supported for undetermined values. Can I have an approach which works for both cases (translates undetermined vars into text/code which would be compiled into Oz values during loading.)

   Alternative idea for storing Fenvs to textual format: store approximated Fenv (sample Fenv and create envelope from sampling data)


** Define how fenvs of prototype motifs can be variated with motif instance arguments 

   [this is actually a Strasheela TODO..]

   See [[file:MidiOut_toTassman/MusicRepresentationForTassmanPiece.org::*Prototype%20Motif%20Variation][file:MidiOut_toTassman/MusicRepresentationForTassmanPiece.org::*Prototype Motif Variation]]

*** TODO Extend ProtoMotif 'scriptArgs'

    see [[file:MidiOut_toTassman/MusicRepresentationForTassmanPiece.org::*Prototype%20Motif%20Variation][file:MidiOut_toTassman/MusicRepresentationForTassmanPiece.org::*Prototype Motif Variation]]

*** TODO Check my ideas out with simple motif prototype (e.g., with fenvs at different levels) and motif instance args 

     See [[file:MidiOut_toTassman/MusicRepresentationForTassmanPiece.org::*Prototype%20Motif%20Variation][file:MidiOut_toTassman/MusicRepresentationForTassmanPiece.org::*Prototype Motif Variation]]
   




* Other 

** GeOz 
   
*** TODO Install GeOz 
    SCHEDULED: <2009-06-01 Mon>
    
    NOTE: development of Gecode/J is discontinued. So, I better stick with Mozart/Oz. But then it would be a good idea to support gustavo getting Gecode running for Oz. E.g., moral support by installing it and asking questions, also finding bugs perhaps..

    First ask  gustavo.ggutierrez@gmail.com whether meanwhile graph constraints are working again

1) Download gecode sources (we don't have support for binary distributions yet) and build them. In the install directory there will be a lib/pkgconfig subdir. Export the shell variable PKG_CONFIG_PATH to /Users/u/install/lib/pkgconfig. For this you need pkg-config installed, if not, download it form http://www.rudix.org/packages.html .

2) With the previous variable exported, the mozart configure will properly detect gecode. Then, just configure mozart (with debug support if you want) and install it.

3) Now, you should have a working installation of the development branch and you can take a look at mozart-gecode/share/examples/gfd for the examples. That will give you and impression of the changes from the user level.

If problems occur ask gustavo.ggutierrez@gmail.com


*** Check out documentation

    The reference doc is updated to reflect the new constraint system
    Wait/ask gustavo.ggutierrez@gmail.com to render the HTML files

*** Check out examples

    How did coding style change? What else did change

    file:/Users/t/oz/mozart/branches/mozart-gecode/mozart/share/examples/gfd/

    possibly create new small-scale examples for testing and to better understand

**** FD constraints (including selection constraints)
**** FS constraints
**** !! Graph constraints
     
     currently broken in Gecode 2.*
     gustavo.ggutierrez@gmail.com said this should be fixed in about 1-2 months time (i.e. mid Oct-Nov)

**** Space combinators 


*** Check out how performance of examples 

    Noticable difference of old version?


** TODO Read Strasheela doc						  :EASY:

   know your system, e.g., know all my Patterns 







